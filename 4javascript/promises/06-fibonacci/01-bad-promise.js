// =============================================================================
// РЕКУРСИЯ + ПРОМИСЫ (МЕДЛЕННЫЙ СПОСОБ)
// =============================================================================


// =============================================================================
// Рекурсивная функция (асинхронная, на промисах)
// =============================================================================
const fib = (n) => {
  // 1. Функция возвращает проис
  return new Promise((resolve) => {
    // 1. Простой случай
    // 1.1. Если "n" равно "0" или "1"
    if (n === 0 || n === 1) {
      // 1.2. Выполнить промис, передав значение
      resolve(n);
    }
    
    // 2. Сложный случай
    else {
      // 2.1. Выполнить два промиса, вызывающих функцию с числом на 1 и на 2 меньше
      Promise.all([fib(n - 2), fib(n - 1)])
        // 2.2. Выполнить промис, передав сумму результатов
        .then(([res1, res2]) => resolve(res1 + res2));
    }
  })
}



// =============================================================================
// Вызов функции
// =============================================================================
fib(5).then(console.log)
// fib(40).then(console.log)

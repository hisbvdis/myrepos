// Fetch-запросы: Базовый пример №1 (через ".then")


// 1. Отправить запрос
fetch("https://api.github.com/users/hisbvdis")

  // 2. Получить первый ответ с заголовками
  .then(response => {

    // 2.1. Если запрос успешен, запросить второй ответ с телом
    if (response.ok) return response.json();

    // 2.2. Иначе сгенерировать ошибку
    else throw new Error(`Запрос не удался`);
  })

  // 3. Если запрос второго ответа с телом успешен, получить его и обработать
  .then(user => {
    // 3.1. Добавить изображение на страницу
    let img = document.createElement("img");  // Создать элемент <img>
    img.src = user.avatar_url;                // Атрибуту "href" присвоить "url"
    document.body.append(img);                // Добавить элемент на страницу

    // 3.2. Передать тело ответа в следующий обработчик, вернув через "return".
    //      Полезно, если с телом ответа нужно продолжать работать в следующих
    //      обработчиках.
    return user;
  })

  // 4. Принять тело ответа из предыдущего обработчика в параметр "user"
  //    и обработать
  .then(user => {

    // 4.1. Здесь обработчик ВОЗВРАЩАЕТ ПРОМИС, поэтому следующий регистратор
    //      обработчика ".then", который должен принять результат этого промиса,
    //      будет ждать завершения данного промиса в виде запуска "resolve()"
    return new Promise((resolve) => {
      setTimeout(() => resolve(user), 3000);
    })
  })

  // 5. Принять тело ответа из предыдущего обработчика в параметр "user"
  //    и обработать (вывести в консоли)
  .then(user => console.log(user.name));
// Промисы: Базовый пример

// 1. Создать промис
let promise = new Promise((resolve, reject) => {
  // 1.1. Асинхронный код (здесь асинхронный код эмулируется таймером)
  setTimeout(() => {

    // 1.2. Пример ситуации, при которой промис считается "ВЫПОЛНЕННЫМ"
    // .... и вызывается функция "resolve()".
    // .... Через параметр в обработчик передаётся "значение"
    if (Math.random() > 0.5) {
      resolve("Исполнитель выполнен");
    }

    // 1.3. Пример ситуации, при которой промис считается "ОТКЛОНЁННЫМ"
    // .... и вызывается функция "reject()".
    // .... Через параметр в обработчик передаётся "объект ошибки".
    if (Math.random() < 0.5) {
      reject(new Error("Исполнитель отклонён"));
    }
  }, 1000);
})


// 2. Назначить обработчики ВЫПОЛНЕНИЯ и ОТКЛОНЕНИЯ с помощью методов
// 2.1. Метод, который всегда выполняется сразу после завершения работы
// .... исполнителя и перед другими методами
promise.finally(
  console.log("Обработчик после исполнителя перед другими методами")
);

// 2.2. Метод, который назначает обработчики ВЫПОЛНЕНИЯ и ОТКЛОНЕНИЯ
promise.then(
  // Функция-обработчик ВЫПОЛНЕНИЯ исполнителя
  result => console.log(`Выполнено с сообщением "${result}"`),
  // Функция-обработчик ОТКЛОНЕНИЯ исполнителя
  error => console.log(`Отклонено с сообщением "${error.message}"`)
);
